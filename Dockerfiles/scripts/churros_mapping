#!/bin/bash
cmdname=`basename $0`
function usage()
{
    echo "$cmdname" '[options] <command> <fastq> <prefix> <build> <Ddir>' 1>&2
    echo '   <command>:' 1>&2
    echo '      exec: map + postprocess' 1>&2
    echo '      map: mapping by bowtie2' 1>&2
    echo '      postprocess: QC and generate wig files by ssp and parse2wig;' 1>&2
    echo '      stats: show mapping/QC stats;' 1>&2
    echo '      header: print header line of the stats' 1>&2
    echo '   <fastq>: fastq file' 1>&2
    echo '   <prefix>: output prefix' 1>&2
    echo '   <build>: genome build (e.g., hg38)' 1>&2
    echo '   <Ddir>: directory of bowtie2 index' 1>&2
    echo '   Options:' 1>&2
    echo '      -c: output as CRAM format (defalt: BAM)' 1>&2
    echo '      -b: binsize of parse2wig+ (defalt: 100)' 1>&2
    echo '      -z: peak file for FRiP calculation (BED format, default: default MACS2 without control)' 1>&2
    echo '      -m: consider genome mappability in parse2wig+' 1>&2
    echo '      -k [36|50]: read length of mappability file (default:50)' 1>&2
    echo '      -n: omit ssp' 1>&2
    echo '      -f: output format of parse2wig+ (default: 3)' 1>&2
    echo '               0: compressed wig (.wig.gz)' 1>&2
    echo '               1: uncompressed wig (.wig)' 1>&2
    echo '               2: bedGraph (.bedGraph)' 1>&2
    echo '               3: bigWig (.bw)' 1>&2
    echo '      -p "bowtie2 param": parameter of bowtie2 (shouled be quated)' 1>&2
    echo "   Example:" 1>&2
    echo "      For single-end: $cmdname exec chip.fastq.gz chip hg38 Database/Ensembl-GRCh38" 1>&2
    echo "      For paired-end: $cmdname exec \"-1 chip_1.fastq.gz -2 chip_2.fastq.gz\" chip hg38 Database/Ensembl-GRCh38" 1>&2
}

bowtieparam=""
mp=0
nopp=0
format=BAM
bamdir=bam
of=3
binsize=100
k=50
peak=""
while getopts cb:z:a:mk:nf:p: option
do
    case ${option} in
	c) format=CRAM
	   bamdir=cram
	   ;;
	b) binsize=${OPTARG};;
	z) peak=${OPTARG}
           if test ! -e $peak; then
               echo "Error: $peak does not exist (-b)."
               exit 1
           else
               peak="--bed $peak"
           fi
           ;;
	m) mp=1;;
	k) k=${OPTARG};;
        n) nopp=1;;
        f) of=${OPTARG};;
        p) bowtieparam=${OPTARG};;
	*)
	    usage
	    exit 1
	    ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
  usage
  exit 1
fi

if test $1 = "header"; then
    if test $mp -eq 1; then
	echo -e "\tSample\tSequenced reads	Mapped 1 time	%	Mapped >1 times	%	Mapped all	%	Unmapped	%	Nonredundant	Redundant	Complexity for10M	Read depth	Genome coverage	Tested reads	GC summit	read length	fragment length	SSP-NSC	SSP-RLSC	SSP-RSC	Background uniformity	FCS(read)	FCS(flen)	FCS(1k)	FCS(10k)	FCS(100k)"
    else
	echo -e "\tSample\tSequenced reads	Mapped 1 time	%	Mapped >1 times	%	Mapped all	%	Unmapped	%	Nonredundant	Redundant	Complexity for10M	Read depth	Genome coverage	Tested reads	read length	fragment length	SSP-NSC	SSP-RLSC	SSP-RSC	Background uniformity	FCS(read)	FCS(flen)	FCS(1k)	FCS(10k)	FCS(100k)"
    fi
    exit
fi

if [ $# -ne 5 ]; then
  usage
  exit 1
fi

command=$1
fastq=$2
prefix=$3
build=$4
Ddir=$5

post="-bowtie2"`echo $bowtieparam | tr -d ' '`
head=$prefix$post-$build

pair=""
# for paired-end fastq
if [[ $fastq == *-1\ * ]]; then
    fastq=${fastq/-1/\\-1}
    fastq=${fastq/-2/\\-2}
    pair="-p"
fi

gt=$Ddir/genometable.txt

if test $mp -eq 1; then
    parseparam="-m -k $k"
else
    parseparam=""
fi

if test $command = "map" -o $command = "exec"; then
    if test $format = "CRAM"; then
        bowtie2.sh -c -p "$bowtieparam" "$fastq" $prefix $build $Ddir
    else
        bowtie2.sh -p "$bowtieparam" "$fastq" $prefix $build $Ddir
    fi
fi
if test $command = "postprocess" -o $command = "exec"; then
    if test $format = "CRAM"; then
       mapfile=$bamdir/$head.sort.cram
       parse2wig+.sh $parseparam $pair -b $binsize $peak -f $of $mapfile $head $build $Ddir
    else
       mapfile=$bamdir/$head.sort.bam
       if test "$peak" != ""; then
	   parse2wig+.sh $parseparam $pair -b $binsize $peak -f $of $mapfile $head $build $Ddir
       else
	   macs.sh $mapfile none ${prefix}_forFRiP sharp
	   parse2wig+.sh $parseparam $pair -b $binsize -z macs/${prefix}_forFRiP_peaks.narrowPeak -f $of $mapfile $head $build $Ddir
       fi
    fi
    if test $nopp != 1; then ssp.sh $pair $mapfile $head $build $gt; fi
fi
if test $command = "stats"; then
    a=`parsebowtielog2.pl $pair log/bowtie2-$head | grep -v Sample`
    b=`cat log/parsestats-$head.$binsize | grep -v Sample | cut -f6,7,8,9`
    gcov=`cat log/parsestats-$head.$binsize | grep -v Sample | cut -f10`
    if test $mp -eq 1; then
	b2=`cat log/parsestats-$head.GC.100000 | grep -v Sample | cut -f11,12`
    else
	b2=`cat log/parsestats-$head.$binsize | grep -v Sample | cut -f11`
    fi

    echo -en "$a\t$b\t$gcov\t$b2\t$c"

    if test $nopp != 1; then
	echo -en "`tail -n1 sspout/$head.stats.txt | cut -f4,5,6,7,8,9,10,11,12,13,14`"
    fi
    echo ""
fi
