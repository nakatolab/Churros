#!/bin/bash
# Copyright(c) Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>
# All rights reserved.

cmdname=`basename $0`
function usage()
{
    echo "$cmdname [Options] <samplepairlist> <odir> <build> <gt>" 1>&2
    echo '   <samplepairlist>: text file of ChIP/Input sample pairs' 1>&2
    echo '   <odir>: output directory' 1>&2
    echo '   <build>: genome build (e.g., hg38)' 1>&2
    echo '   <gt>: genome_table file' 1>&2
    echo '   Options:' 1>&2
    echo '      -b <int>: binsize (defalt: 100)' 1>&2
    echo '      -d <str>: directory of bigWig files (default: TotalReadNormalized/)' 1>&2
    echo '      -e <int>: Output value' 1>&2
    echo '           0: ChIP/Input enrichment' 1>&2
    echo '           1: -log10(P) (ChIP internal)' 1>&2
    echo '           2 (default): -log10(P) (ChIP/Input enrichment)' 1>&2
    echo '      -n: do not filter PCR duplicate' 1>&2
    echo '      -m: do not consider genome mappability' 1>&2
    echo '      -y <str>: postfix of .bw files to be used (default: "-raw-GR")' 1>&2
    echo '      -D <str>: directory for execution (defalt: "Churros_result")' 1>&2
    echo '      -x: Output as bigWig (defalt: bedGraph)' 1>&2
    echo "   Example:" 1>&2
    echo "      $cmdname samplelist.txt chip-seq hg38 genometable.hg38.txt" 1>&2
}

binsize=100
pdir=TotalReadNormalized/
mp=1
nofilter=0
post_predefined=""
chdir="Churros_result"
bigwig=0
outputvalue=2

while getopts b:d:e:nmy:D:x option
do
    case ${option} in
        b) binsize=${OPTARG};;
        d) pdir=${OPTARG};;
        n) nofilter=1;;
        m) mp=0;;
        e) outputvalue=${OPTARG};;
        y) post_predefined=${OPTARG};;
        D) chdir=${OPTARG};;
        x) bigwig=1;;
	*)
	    usage
	    exit 1
	    ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -ne 4 ]; then
  usage
  exit 1
fi

samplepairlist=$1
odir=$2
build=$3
gt=$4

check_build.sh $build || exit 1
chdir=$chdir/$build

if test ! -e $samplepairlist; then
    echo "Error: $samplepairlist does not exist."
    exit 1
fi

pdir=$chdir/bigWig/$pdir
logdir=$chdir/log/genPvalwig/
odir=$chdir/$odir
mkdir -p $logdir $odir

if test $outputvalue -eq 0; then
    outputdir=Enrichment
elif test $outputvalue -eq 1; then
    outputdir=Pval_internal
elif test $outputvalue -eq 2; then
    outputdir=Pval_enrich
else
    echo "Error: outputvalue (-e) should be 0, 1, or 2."
fi

if test ! -e $gt; then
    echo "Error: $gt does not exist."
    exit 1
fi

echo "output directory: $odir"
if test "$post_predefined" = ""; then
    if test $mp -eq 1; then
        post=.mpbl
    else
        post=""
    fi
    if test $nofilter -eq 1; then
        post=$post-nofilter
    fi
else
    post=$post_predefined
fi

ex(){ echo $1; eval $1; }


if test $bigwig -eq 1; then
    param_format="--outputformat 3"
else
    param_format="--outputformat 2"
fi

while IFS=',' read -ra LINE; do
    chip=${LINE[0]:-""}
    input=${LINE[1]:-""}
    label=${LINE[2]:-""}

    param="--outputvalue $outputvalue $param_format --gt $gt -o $odir/$outputdir"
    if test $outputvalue -eq 0; then
        if test "$input" != ""; then
            drompa+ GENWIG $param -i $pdir/$chip$post.$binsize.bw,$pdir/$input$post.$binsize.bw,${label} > $logdir/GENWIG.Enrichment.$chip$post
        else
            echo "Error: input sample is not specified for the sample $chip."
            exit 1
        fi
    elif test $outputvalue -eq 1; then
        drompa+ GENWIG $param -i $pdir/$chip$post.$binsize.bw,,${label} > $logdir/GENWIG.pval_internal.$chip$post
    else
        if test "$input" != ""; then
            drompa+ GENWIG $param -i $pdir/$chip$post.$binsize.bw,$pdir/$input$post.$binsize.bw,${label}_up > $logdir/GENWIG.pval_enrich.$chip$post.up
            drompa+ GENWIG $param -i $pdir/$input$post.$binsize.bw,$pdir/$chip$post.$binsize.bw,${label}_down > $logdir/GENWIG.pval_enrich.$chip$post.down
        else
            echo "Error: input sample is not specified for the sample $chip."
            exit 1
        fi
    fi
done < $samplepairlist
