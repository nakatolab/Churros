#!/bin/bash
# Copyright(c) Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>
# All rights reserved.

cmdname=`basename $0`
function usage()
{
    echo "$cmdname [Options] <samplepairlist> <build>" 1>&2
    echo '   <samplepairlist>: text file of ChIP/Input sample pairs' 1>&2
    echo '   <build>: genome build (e.g., hg38)' 1>&2
    echo '   Options:' 1>&2
    echo '      -D : directory for execution (defalt: "Churros_result")' 1>&2
    echo '      -d : directory for peaks (defalt: "macs")' 1>&2
    echo '      -q : threshould of MACS2 (defalt: 0.05)' 1>&2
    echo '      -b : bam direcoty (defalt: "bam")' 1>&2
    echo '      -F : overwrite MACS2 results if exist (defalt: skip)' 1>&2
    echo '      -t : number of CPUs (defalt: 4)' 1>&2
    echo '      -p : Paired-end mode' 1>&2
    echo '      -s : postfix of the mapfile ($prefix$post.sort.bam, default: "")' 1>&2
}

qval=0.05
mdir=macs
bamdir=bam
ncore=4
chdir="Churros_result"
force=""
post=""
pair=""

while getopts D:b:q:d:t:Fps: option
do
    case ${option} in
	D) chdir=${OPTARG};;
	b) bamdir=${OPTARG};;
	q) qval=${OPTARG};;
	d) mdir=${OPTARG};;
	t) ncore=${OPTARG}
           isnumber.sh $ncore "-t" || exit 1
	   ;;
	F) force="-F";;
	p) pair="-p";;
	s) post=${OPTARG};;
        *)
	    usage
	    exit 1
	    ;;
    esac
done
shift $((OPTIND - 1))


if [ $# -ne 2 ]; then
  usage
  exit 1
fi


samplepairlist=$1
build=$2

if test ! -e $samplepairlist; then
    echo "Error: $samplepairlist does not exist."
    exit 1
fi

#check_build.sh $build || exit 1
chdir=$chdir/$build

ex(){ echo $1; eval $1; }

echo "Churros callpeak: $samplepairlist"

mdir_original=`basename $mdir`
mdir=$chdir/$mdir_original
bamdir=$chdir/`basename $bamdir`

mkdir -p $mdir
newlist=$mdir/samplepairlist.txt
rm -rf $newlist

while IFS=',' read -r chip input label mode flen; do
    chip=${chip:-""}
    input=${input:-""}
    label=${label:-""}
    mode=${mode:-""}
    flen=${flen:-""}
    echo $chip, $input, $label, $flen, $mode

    if test "$mode" = ""; then
       mode="sharp"
    fi
    if test $mode = "sharp" -o $mode = "sharp-nomodel"; then
       peak=$mdir_original/${label}_peaks.narrowPeak
    else
       peak=$mdir_original/${label}_peaks.broadPeak
    fi
    echo $chip, $input, $label, $mode, $flen, $peak
    echo "$chip,$input,$label,$mode,$peak" >> $newlist
done < $samplepairlist

do_macs(){
    LINE=$1
    build=$2
    bamdir=$3
    mdir=$4
    newlist=$5
    qval=$6
    force=$7
    post=$8
    pair=$9

    IFS=, read -ra LINE <<< $LINE
    chip=${LINE[0]:-""}
    input=${LINE[1]:-""}
    label=${LINE[2]:-""}
    mode=${LINE[3]:-""}
    flen=${LINE[4]:-""}
    IPbam=$bamdir/$chip$post.sort.bam
    Inputbam=$bamdir/$input$post.sort.bam

#    echo $chip
#    echo $input
#    echo $label
#    echo $mode
#    echo $flen

    if test "$mode" = ""; then mode="sharp"; fi
    if test $mode = "sharp" -o $mode = "sharp-nomodel"; then
        peak=$mdir/${label}_peaks.narrowPeak
        if test "$flen" != ""; then
            flen="-f $flen"
        fi
    elif test $mode = "broad" -o $mode = "broad-nomodel"; then
        peak=$mdir/${label}_peaks.broadPeak
        if test "$flen" != ""; then
            flen="-f $flen"
        fi
    fi
    if test "$input" = ""; then
        macs.sh $force $pair -q $qval -d $mdir $flen $IPbam none $label $build $mode
    else
        macs.sh $force $pair -q $qval -d $mdir $flen $IPbam $Inputbam $label $build $mode
    fi
}
export -f do_macs

array=""

while read -r LINE || [ -n "$LINE" ]; do
    array="$array $LINE"
done < $samplepairlist

echo ${array[@]} | tr ' ' '\n' \
    | xargs -I {} -P $ncore bash -c "do_macs {} $build $bamdir $mdir $newlist $qval \"$force\" \"$post\" \"$pair\""

#  xargs -n1 -I
echo "churros_callpeak done."
